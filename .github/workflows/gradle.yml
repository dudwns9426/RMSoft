# This workflow uses actions that are not certified by GitHub.
# They are provided by a third-party and are governed by
# separate terms of service, privacy policy, and support
# documentation.
# This workflow will build a Java project with Gradle and cache/restore any dependencies to improve the workflow execution time
# For more information see: https://docs.github.com/en/actions/automating-builds-and-tests/building-and-testing-java-with-gradle

name: Deploy to Amazon EC2

on:
  push:
    branches:
     -main

env:
  AWS_REGION: ap-northeast-2
  S3_BUCKET_NAME: rmsoft-youngjun-bucket
  CODE_DEPLOY_APPLICATION_NAME: aba
  CODE_DEPLOY_DEPLOYMENT_GROUP_NAME: abc
permissions:
  contents: read

jobs:
  deploy:
    name: Deploy
    runs-on: ubuntu-latest
    environment: production

    steps:
    # 기본체크아웃
    - name: Checkout
      uses: actions/checkout@v3
    # JDK 17 세팅
    - name: Set up JDK 17
      uses: actions/setup-java@v3
      with:
        java-version: '17'
        distribution: 'temurin'
    # 실행권한 부여    
    - name: Run chomod to make gradlew executable
      run: chmod +x ./gradlew
    # Gradle build (Test 제외)  
    - name: Build with Gradle
      uses: gradle/gradle-build-action@bd5760595778326ba7f1441bcf7e88b49de61a25 # v2.6.0
      with:
        arguments: clean build -x test
    # AWS인증
    - name: Configure AWS credentials
      uses: aws-actions/configure-aws-credentials@v1
      with:
        aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY }}
        aws-secret-access-key: ${{ secrets.AWS_SECRET_KEY }}
        aws-region: ${{ env.AWS_RESION }}
    # 빌드 결과물 S3버킷에 업로드
    - name: Upload to AWS S3
      run: |
          aws deploy push \\
            --application-name ${{ env.CODE_DEPLOY_APPLICATION_NAME }} \\
            --ignore-hidden-files \\
            --s3-location s3://$S3_BUCKET_NAME/$GITHUB_SHA.zip \\
            --source .
    # S3버킷에 있는 파일 대상으로 CodeDeploy실행
    - name: Deploy to AWS EC2 from S3
      run: |
          aws deploy create-deployment \\
            --application-name ${{ env.CODE_DEPLOY_APPLICATION_NAME }} \\
            --deployment-config-name CodeDeployDefault.AllAtOnce \\
            --deployment-group-name ${{ env.CODE_DEPLOY_DEPLOYMENT_GROUP_NAME }} \\
            --s3-location bucket=$S3_BUCKET_NAME,key=$GITHUB_SHA.zip,bundleType=zip
  
